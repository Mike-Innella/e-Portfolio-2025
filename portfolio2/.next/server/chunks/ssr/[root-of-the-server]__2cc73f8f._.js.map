{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":["file:///home/mike__2099/Documents/GitHub/e-Portfolio-2025/portfolio2/src/content/projects.ts"],"sourcesContent":["export type ProjectLink = {\n  tooltip: string;\n  link: string;\n  type: \"code\" | \"live\";\n};\n\nexport type Project = {\n  slug: string;\n  title: string;\n  subtitle?: string;\n  summary: string;     // short: card\n  details: string;     // long: project page\n  tags: string[];\n  links: ProjectLink[];\n  year?: number;\n  iconKey?: string; // keep placeholder for later if you want to render icons\n  image?: string; // optional project image for enhanced cards\n};\n\nexport const projects: Project[] = [\n  {\n    slug: \"tunein\",\n    title: \"TuneIn\",\n    subtitle: \"Independent Project\",\n    image: \"/images/TuneIn.png\",\n    summary:\n      \"Focus-music web app with mood-based YouTube playlists and a session timer for distraction-free study/work, built with React and deployed on Vercel.\",\n      details: \"Tech: React, JavaScript, CSS, YouTube Data API, Vercel. Key challenges were syncing session timers with variable video lengths, autoplay restrictions, and quota limits. I built a playlist stitcher that queues multiple tracks to match the timer and added debounced, cached searches. Result: timer-to-track sync is within ±10s for ~95% of sessions with cold loads ≈1–1.5s on desktop.\",\n      details: \"Tech: React, JavaScript, CSS, YouTube Data API, Vercel. Key challenges were syncing session timers with variable video lengths, autoplay restrictions, and quota limits. I built a playlist stitcher that queues multiple tracks to match the timer and added debounced, cached searches. Result: timer-to-track sync is within ±10s for ~95% of sessions with cold loads ≈1–1.5s on desktop.\",\n    tags: [\"react\", \"javascript\", \"api\", \"css\", \"html\", \"routing\", \"supabase\"],\n    links: [\n      {\n        tooltip: \"See code\",\n        link: \"https://github.com/Mike-Innella/TuneIn\",\n        type: \"code\",\n      },\n      {\n        tooltip: \"See app\",\n        link: \"https://tune-in-theta.vercel.app/\",\n        type: \"live\",\n      },\n    ],\n  },\n\n  {\n    slug: \"howard-motor\",\n    title: \"Howard Motor Webapp\",\n    subtitle: \"Freelance\",\n    image: \"/images/HowardMotor.png\",\n    summary:\n      \"Solo freelance web app for Howard Motor Corp, built with React and Firebase to modernize customer engagement.\",\n      details: \"Tech: React, Firebase (Auth/Firestore/Hosting), Tailwind, EmailJS. Focus was secure form flows and a mobile-first UI for non-technical users. I used least-privilege Firestore rules, serverless email hand-off, and simplified step forms. Result: mobile FCP ≈1.3s and fewer abandoned requests after validation + progress cues.\",\n      details: \"Tech: React, Firebase (Auth/Firestore/Hosting), Tailwind, EmailJS. Focus was secure form flows and a mobile-first UI for non-technical users. I used least-privilege Firestore rules, serverless email hand-off, and simplified step forms. Result: mobile FCP ≈1.3s and fewer abandoned requests after validation + progress cues.\",\n    tags: [\"react\", \"firebase\", \"tailwind\", \"api\", \"nodejs\", \"emailjs\"],\n    links: [\n      {\n        tooltip: \"See code\",\n        link: \"https://github.com/Mike-Innella/howard-motor-webapp\",\n        type: \"code\",\n      },\n      {\n        tooltip: \"See app\",\n        link: \"https://www.howardmotorco.net/\",\n        type: \"live\",\n      },\n    ],\n  },\n\n  {\n    slug: \"spoiler-shield\",\n    title: \"Spoiler Shield\",\n    subtitle: \"Mobile/Web Developer\",\n    image: \"/images/SpoilerShield.png\",\n    summary:\n      \"Details coming soon — project link: https://www.spoilershield.xyz/\",\n      details: \"Tech: Next.js, TypeScript, API integrations. The core problem was filtering spoilers consistently without over-blocking. I implemented a normalized rule system with a preview/test mode and cached lookups. Result: sub-200ms rule application on typical feeds and a low false-positive rate targeted via unit tests. (Public beta still evolving.)\",\n      details: \"Tech: Next.js, TypeScript, API integrations. The core problem was filtering spoilers consistently without over-blocking. I implemented a normalized rule system with a preview/test mode and cached lookups. Result: sub-200ms rule application on typical feeds and a low false-positive rate targeted via unit tests. (Public beta still evolving.)\",\n    tags: [\"nextjs\", \"typescript\", \"api\"],\n    links: [\n      {\n        tooltip: \"See code\",\n        link: \"https://github.com/0xagf0x/spoiler-shield-web\",\n        type: \"code\",\n      },\n      {\n        tooltip: \"See app\",\n        link: \"https://www.spoilershield.xyz/\",\n        type: \"live\",\n      },\n    ],\n  },\n\n  {\n    slug: \"skinstric-ai\",\n    title: \"Skinstric.AI\",\n    subtitle: \"Frontend Engineer\",\n    image: \"/images/Skinstric.png\",\n    summary:\n      \"Built a real-time skin analysis platform using OpenAI Vision API and Next.js with 98% detection accuracy.\",\n      details: \"Tech: Next.js, React, OpenAI Vision API, CSS, Three.js (UI flourishes), Vercel. Main issues were inference latency and robust error states for user images. I added progressive UI states, client-side checks, and smaller payloads. Result: prototype measured ~98% detection on an internal set with typical round-trip ≈1–2s on desktop.\",\n      details: \"Tech: Next.js, React, OpenAI Vision API, CSS, Three.js (UI flourishes), Vercel. Main issues were inference latency and robust error states for user images. I added progressive UI states, client-side checks, and smaller payloads. Result: prototype measured ~98% detection on an internal set with typical round-trip ≈1–2s on desktop.\",\n    tags: [\"react\", \"javascript\", \"api\", \"css\", \"threejs\"],\n    links: [\n      {\n        tooltip: \"See code\",\n        link: \"https://github.com/Mike-Innella/Skinstric.AI-Mike_Innella_Internship\",\n        type: \"code\",\n      },\n      {\n        tooltip: \"See app\",\n        link: \"https://skinstric-ai-mike-innella-internship.vercel.app/\",\n        type: \"live\",\n      },\n    ],\n  },\n\n  {\n    slug: \"summarist\",\n    title: \"Summarist\",\n    subtitle: \"Independent Project\",\n    image: \"/images/Summarist.png\",\n    summary:\n      \"Rebuilt a book-summary app clone using Next.js, TypeScript, Tailwind CSS, and Supabase. Features authentication, dynamic pages, and responsive UI.\",\n      details: \"Tech: Next.js, TypeScript, Supabase, Tailwind. I built auth, dynamic routes, and a responsive layout while keeping search snappy. Debounced queries and route-level code-splitting improved perceived speed. Result: LCP under ~2s on desktop and sub-150ms search feedback for common queries.\",\n      details: \"Tech: Next.js, TypeScript, Supabase, Tailwind. I built auth, dynamic routes, and a responsive layout while keeping search snappy. Debounced queries and route-level code-splitting improved perceived speed. Result: LCP under ~2s on desktop and sub-150ms search feedback for common queries.\",\n    tags: [\"nextjs\", \"typescript\", \"supabase\", \"tailwind\", \"css\"],\n    links: [\n      {\n        tooltip: \"See code\",\n        link: \"https://github.com/Mike-Innella/summarist-home-page\",\n        type: \"code\",\n      },\n      {\n        tooltip: \"See app\",\n        link: \"https://summarist-home-page-pied.vercel.app/\",\n        type: \"live\",\n      },\n    ],\n  },\n\n  {\n    slug: \"shaman-asher\",\n    title: \"The Shaman Asher\",\n    subtitle: \"Freelance\",\n    image: \"/images/ShamanAsher.png\",\n    summary:\n      \"Hired as a freelance UI/UX developer to modernize a mystical services website. Introduced animated loaders.\",\n      details: \"Tech: TypeScript, Tailwind, EmailJS. Hired to modernize UX: added loaders, accessible forms, and consistent motion. The challenge was creating a polished feel without heavy bundles. Result: reduced layout shift (stable CLS), lean CSS, and clearer conversion paths via simplified CTAs.\",\n      details: \"Tech: TypeScript, Tailwind, EmailJS. Hired to modernize UX: added loaders, accessible forms, and consistent motion. The challenge was creating a polished feel without heavy bundles. Result: reduced layout shift (stable CLS), lean CSS, and clearer conversion paths via simplified CTAs.\",\n    tags: [\"typescript\", \"tailwind\", \"emailjs\", \"html\", \"nodejs\"],\n    links: [\n      {\n        tooltip: \"See code\",\n        link: \"https://github.com/theshamanasher/theshamanasher\",\n        type: \"code\",\n      },\n      {\n        tooltip: \"See app\",\n        link: \"https://www.shamanasher.com/\",\n        type: \"live\",\n      },\n    ],\n  },\n\n  {\n    slug: \"nft-marketplace\",\n    title: \"NFT Marketplace\",\n    subtitle: \"Frontend Developer (Internship)\",\n    image: \"/images/NFTMarket.png\",\n    summary:\n      \"Virtual internship capstone where I independently rebuilt an NFT Marketplace as a responsive React SPA.\",\n      details: \"Tech: React, JavaScript, CSS. Internship capstone focused on grid performance, pagination, and wallet-like interactions. I virtualized long lists and split code by route to keep the app responsive. Result: 60fps scroll on commodity laptops and Lighthouse scores in the 90s for performance/accessibility.\",\n      details: \"Tech: React, JavaScript, CSS. Internship capstone focused on grid performance, pagination, and wallet-like interactions. I virtualized long lists and split code by route to keep the app responsive. Result: 60fps scroll on commodity laptops and Lighthouse scores in the 90s for performance/accessibility.\",\n    tags: [\"react\", \"javascript\", \"css\", \"html\", \"routing\"],\n    links: [\n      {\n        tooltip: \"See code\",\n        link: \"https://github.com/Mike-Innella/nft-marketplace--MIke_Innella-Internship\",\n        type: \"code\",\n      },\n      {\n        tooltip: \"See app\",\n        link: \"https://nft-marketplace-m-ike-innell-git-40ec1a-mikes-projects-4896b1c6.vercel.app/\",\n        type: \"live\",\n      },\n    ],\n  },\n\n  {\n    slug: \"omdb-store\",\n    title: \"OMDB Movie Store\",\n    subtitle: \"Independent Project\",\n    image: \"/images/MovieStore.png\",\n    summary:\n      \"Solo portfolio project built to master web APIs and dynamic UI development. Created a responsive React app.\",\n      details: \"Tech: React, OMDB API, CSS. The tricky parts were API edge cases, error states, and making search feel instant. I added debounce + cancelation and defensive UI around empty/invalid responses. Result: perceived search latency ≈150–200ms after debounce with clear skeleton and empty states.\",\n      details: \"Tech: React, OMDB API, CSS. The tricky parts were API edge cases, error states, and making search feel instant. I added debounce + cancelation and defensive UI around empty/invalid responses. Result: perceived search latency ≈150–200ms after debounce with clear skeleton and empty states.\",\n    tags: [\"react\", \"javascript\", \"api\", \"css\"],\n    links: [\n      {\n        tooltip: \"See code\",\n        link: \"https://github.com/Mike-Innella/OMDBProject\",\n        type: \"code\",\n      },\n      {\n        tooltip: \"See app\",\n        link: \"https://mike-innella.github.io/OMDBProject/\",\n        type: \"live\",\n      },\n    ],\n  },\n\n  {\n    slug: \"fweather\",\n    title: \"Fweather\",\n    subtitle: \"Independent Project\",\n    image: \"/images/Fweather.png\",\n    summary:\n      \"Personal project: a playful React weather dashboard integrating multiple APIs for real-time weather.\",\n      details: \"Tech: React, multiple weather APIs, CSS/HTML. Combined geolocation, current conditions, and forecasts into a cohesive UI. Caching and minimal re-renders keep it light. Result: typical initial load ≈1.2s on desktop with smooth updates on location change.\",\n      details: \"Tech: React, multiple weather APIs, CSS/HTML. Combined geolocation, current conditions, and forecasts into a cohesive UI. Caching and minimal re-renders keep it light. Result: typical initial load ≈1.2s on desktop with smooth updates on location change.\",\n    tags: [\"react\", \"javascript\", \"api\", \"css\", \"html\"],\n    links: [\n      {\n        tooltip: \"See code\",\n        link: \"https://github.com/Mike-Innella/Fweather\",\n        type: \"code\",\n      },\n      {\n        tooltip: \"See app\",\n        link: \"https://mike-innella.github.io/Fweather/\",\n        type: \"live\",\n      },\n    ],\n  },\n];\n"],"names":[],"mappings":";;;;AAmBO,MAAM,WAAsB;IACjC;QACE,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO;QACP,SACE;QACA,SAAS;QACT,SAAS;QACX,MAAM;YAAC;YAAS;YAAc;YAAO;YAAO;YAAQ;YAAW;SAAW;QAC1E,OAAO;YACL;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;YACA;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;SACD;IACH;IAEA;QACE,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO;QACP,SACE;QACA,SAAS;QACT,SAAS;QACX,MAAM;YAAC;YAAS;YAAY;YAAY;YAAO;YAAU;SAAU;QACnE,OAAO;YACL;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;YACA;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;SACD;IACH;IAEA;QACE,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO;QACP,SACE;QACA,SAAS;QACT,SAAS;QACX,MAAM;YAAC;YAAU;YAAc;SAAM;QACrC,OAAO;YACL;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;YACA;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;SACD;IACH;IAEA;QACE,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO;QACP,SACE;QACA,SAAS;QACT,SAAS;QACX,MAAM;YAAC;YAAS;YAAc;YAAO;YAAO;SAAU;QACtD,OAAO;YACL;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;YACA;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;SACD;IACH;IAEA;QACE,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO;QACP,SACE;QACA,SAAS;QACT,SAAS;QACX,MAAM;YAAC;YAAU;YAAc;YAAY;YAAY;SAAM;QAC7D,OAAO;YACL;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;YACA;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;SACD;IACH;IAEA;QACE,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO;QACP,SACE;QACA,SAAS;QACT,SAAS;QACX,MAAM;YAAC;YAAc;YAAY;YAAW;YAAQ;SAAS;QAC7D,OAAO;YACL;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;YACA;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;SACD;IACH;IAEA;QACE,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO;QACP,SACE;QACA,SAAS;QACT,SAAS;QACX,MAAM;YAAC;YAAS;YAAc;YAAO;YAAQ;SAAU;QACvD,OAAO;YACL;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;YACA;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;SACD;IACH;IAEA;QACE,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO;QACP,SACE;QACA,SAAS;QACT,SAAS;QACX,MAAM;YAAC;YAAS;YAAc;YAAO;SAAM;QAC3C,OAAO;YACL;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;YACA;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;SACD;IACH;IAEA;QACE,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO;QACP,SACE;QACA,SAAS;QACT,SAAS;QACX,MAAM;YAAC;YAAS;YAAc;YAAO;YAAO;SAAO;QACnD,OAAO;YACL;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;YACA;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;SACD;IACH;CACD","debugId":null}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/Documents/GitHub/e-Portfolio-2025/portfolio2/src/app/projects/[slug]/ProjectDetail.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"backButton\": \"ProjectDetail-module__XuraMq__backButton\",\n  \"container\": \"ProjectDetail-module__XuraMq__container\",\n  \"description\": \"ProjectDetail-module__XuraMq__description\",\n  \"hero\": \"ProjectDetail-module__XuraMq__hero\",\n  \"link\": \"ProjectDetail-module__XuraMq__link\",\n  \"links\": \"ProjectDetail-module__XuraMq__links\",\n  \"secondary\": \"ProjectDetail-module__XuraMq__secondary\",\n  \"section\": \"ProjectDetail-module__XuraMq__section\",\n  \"sectionTitle\": \"ProjectDetail-module__XuraMq__sectionTitle\",\n  \"subtitle\": \"ProjectDetail-module__XuraMq__subtitle\",\n  \"tag\": \"ProjectDetail-module__XuraMq__tag\",\n  \"tags\": \"ProjectDetail-module__XuraMq__tags\",\n  \"title\": \"ProjectDetail-module__XuraMq__title\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":["file:///home/mike__2099/Documents/GitHub/e-Portfolio-2025/portfolio2/src/app/projects/%5Bslug%5D/page.tsx"],"sourcesContent":["import { notFound } from \"next/navigation\";\nimport Link from \"next/link\";\nimport { projects } from \"@/content/projects\";\nimport s from \"./ProjectDetail.module.css\";\n\ntype Params = { params: { slug: string } };\n\nconst getTechColor = (tech: string): string => {\n  const colors: Record<string, string> = {\n    'html': '#e34c26',\n    'css': '#1572b6', \n    'javascript': '#f1e05a',\n    'typescript': '#3178c6',\n    'react': '#61dafb',\n    'nodejs': '#68a063',\n    'firebase': '#ffca28',\n    'tailwind': '#06b6d4',\n    'api': '#9333ea',\n    'threejs': '#ffffff',\n    'emailjs': '#ff6b6b',\n    'routing': '#64748b'\n  };\n  return colors[tech.toLowerCase()] || '#64748b';\n};\n\nexport default function ProjectDetail({ params }: Params) {\n  const project = projects.find((p) => p.slug === params.slug);\n\n  if (!project) return notFound();\n\n  return (\n    <div className={s.container}>\n      <Link href=\"/projects\" className={s.backButton}>\n        ← Back to Projects\n      </Link>\n\n      <article>\n        <div className={s.hero}>\n          <h1 className={s.title}>{project.title}</h1>\n          {project.subtitle && (\n            <p className={s.subtitle}>{project.subtitle}</p>\n          )}\n          <p className={s.description} style={{ lineHeight: 1.6 }}>{project.details}</p>\n        </div>\n\n        {project.tags?.length ? (\n          <section className={s.section}>\n            <h2 className={s.sectionTitle}>Tech Stack</h2>\n            <div className={s.tags}>\n              {project.tags.map((tag) => (\n                <span\n                  key={tag}\n                  className={s.tag}\n                  style={{ '--tag-color': getTechColor(tag) } as React.CSSProperties}\n                >\n                  {tag}\n                </span>\n              ))}\n            </div>\n          </section>\n        ) : null}\n\n        {project.links?.length ? (\n          <section className={s.section}>\n            <h2 className={s.sectionTitle}>Project Links</h2>\n            <div className={s.links}>\n              {project.links.map((link) => (\n                <a\n                  key={link.link}\n                  href={link.link}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  className={`${s.link} ${link.type === 'code' ? s.secondary : ''}`}\n                  title={link.tooltip}\n                >\n                  {link.type === \"code\" ? \"View Code\" : \"Live Demo\"}\n                  <span>↗</span>\n                </a>\n              ))}\n            </div>\n          </section>\n        ) : null}\n      </article>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;AAAA;AACA;AACA;AACA;;;;;;AAIA,MAAM,eAAe,CAAC;IACpB,MAAM,SAAiC;QACrC,QAAQ;QACR,OAAO;QACP,cAAc;QACd,cAAc;QACd,SAAS;QACT,UAAU;QACV,YAAY;QACZ,YAAY;QACZ,OAAO;QACP,WAAW;QACX,WAAW;QACX,WAAW;IACb;IACA,OAAO,MAAM,CAAC,KAAK,WAAW,GAAG,IAAI;AACvC;AAEe,SAAS,cAAc,EAAE,MAAM,EAAU;IACtD,MAAM,UAAU,qMAAQ,CAAC,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK,OAAO,IAAI;IAE3D,IAAI,CAAC,SAAS,OAAO,IAAA,gUAAQ;IAE7B,qBACE,6WAAC;QAAI,WAAW,yOAAC,CAAC,SAAS;;0BACzB,6WAAC,sSAAI;gBAAC,MAAK;gBAAY,WAAW,yOAAC,CAAC,UAAU;0BAAE;;;;;;0BAIhD,6WAAC;;kCACC,6WAAC;wBAAI,WAAW,yOAAC,CAAC,IAAI;;0CACpB,6WAAC;gCAAG,WAAW,yOAAC,CAAC,KAAK;0CAAG,QAAQ,KAAK;;;;;;4BACrC,QAAQ,QAAQ,kBACf,6WAAC;gCAAE,WAAW,yOAAC,CAAC,QAAQ;0CAAG,QAAQ,QAAQ;;;;;;0CAE7C,6WAAC;gCAAE,WAAW,yOAAC,CAAC,WAAW;gCAAE,OAAO;oCAAE,YAAY;gCAAI;0CAAI,QAAQ,OAAO;;;;;;;;;;;;oBAG1E,QAAQ,IAAI,EAAE,uBACb,6WAAC;wBAAQ,WAAW,yOAAC,CAAC,OAAO;;0CAC3B,6WAAC;gCAAG,WAAW,yOAAC,CAAC,YAAY;0CAAE;;;;;;0CAC/B,6WAAC;gCAAI,WAAW,yOAAC,CAAC,IAAI;0CACnB,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,oBACjB,6WAAC;wCAEC,WAAW,yOAAC,CAAC,GAAG;wCAChB,OAAO;4CAAE,eAAe,aAAa;wCAAK;kDAEzC;uCAJI;;;;;;;;;;;;;;;+BASX;oBAEH,QAAQ,KAAK,EAAE,uBACd,6WAAC;wBAAQ,WAAW,yOAAC,CAAC,OAAO;;0CAC3B,6WAAC;gCAAG,WAAW,yOAAC,CAAC,YAAY;0CAAE;;;;;;0CAC/B,6WAAC;gCAAI,WAAW,yOAAC,CAAC,KAAK;0CACpB,QAAQ,KAAK,CAAC,GAAG,CAAC,CAAC,qBAClB,6WAAC;wCAEC,MAAM,KAAK,IAAI;wCACf,QAAO;wCACP,KAAI;wCACJ,WAAW,GAAG,yOAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,IAAI,KAAK,SAAS,yOAAC,CAAC,SAAS,GAAG,IAAI;wCACjE,OAAO,KAAK,OAAO;;4CAElB,KAAK,IAAI,KAAK,SAAS,cAAc;0DACtC,6WAAC;0DAAK;;;;;;;uCARD,KAAK,IAAI;;;;;;;;;;;;;;;+BAapB;;;;;;;;;;;;;AAIZ","debugId":null}}]
}