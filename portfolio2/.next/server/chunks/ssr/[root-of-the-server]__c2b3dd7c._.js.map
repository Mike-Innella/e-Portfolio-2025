{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/Documents/GitHub/e-Portfolio-2025/portfolio2/src/app/projects/ProjectsPage.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n});\n"],"names":[],"mappings":"AAAA;AACA"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/Documents/GitHub/e-Portfolio-2025/portfolio2/src/app/projects/projects.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"grid\": \"projects-module__f4oa2a__grid\",\n  \"section\": \"projects-module__f4oa2a__section\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///home/mike__2099/Documents/GitHub/e-Portfolio-2025/portfolio2/src/content/projects.ts"],"sourcesContent":["export type ProjectLink = {\n  tooltip: string;\n  link: string;\n  type: \"code\" | \"live\";\n};\n\nexport type Project = {\n  slug: string;\n  title: string;\n  subtitle?: string;\n  summary: string;     // short: card\n  details: string;     // long: project page\n  tags: string[];\n  links: ProjectLink[];\n  year?: number;\n  iconKey?: string; // keep placeholder for later if you want to render icons\n  image?: string; // optional project image for enhanced cards\n};\n\nexport const projects: Project[] = [\n  {\n    slug: \"tunein\",\n    title: \"TuneIn\",\n    subtitle: \"Independent Project\",\n    image: \"/images/TuneIn.png\",\n    summary:\n      \"Focus-music web app with mood-based YouTube playlists and a session timer for distraction-free study/work, built with React and deployed on Vercel.\",\n      details: \"Tech: React, JavaScript, CSS, YouTube Data API, Vercel. Key challenges were syncing session timers with variable video lengths, autoplay restrictions, and quota limits. I built a playlist stitcher that queues multiple tracks to match the timer and added debounced, cached searches. Result: timer-to-track sync is within ±10s for ~95% of sessions with cold loads ≈1–1.5s on desktop.\",\n      details: \"Tech: React, JavaScript, CSS, YouTube Data API, Vercel. Key challenges were syncing session timers with variable video lengths, autoplay restrictions, and quota limits. I built a playlist stitcher that queues multiple tracks to match the timer and added debounced, cached searches. Result: timer-to-track sync is within ±10s for ~95% of sessions with cold loads ≈1–1.5s on desktop.\",\n    tags: [\"react\", \"javascript\", \"api\", \"css\", \"html\", \"routing\", \"supabase\"],\n    links: [\n      {\n        tooltip: \"See code\",\n        link: \"https://github.com/Mike-Innella/TuneIn\",\n        type: \"code\",\n      },\n      {\n        tooltip: \"See app\",\n        link: \"https://tune-in-theta.vercel.app/\",\n        type: \"live\",\n      },\n    ],\n  },\n\n  {\n    slug: \"howard-motor\",\n    title: \"Howard Motor Webapp\",\n    subtitle: \"Freelance\",\n    image: \"/images/HowardMotor.png\",\n    summary:\n      \"Solo freelance web app for Howard Motor Corp, built with React and Firebase to modernize customer engagement...\",\n      details: \"Tech: React, Firebase (Auth/Firestore/Hosting), Tailwind, EmailJS. Focus was secure form flows and a mobile-first UI for non-technical users. I used least-privilege Firestore rules, serverless email hand-off, and simplified step forms. Result: mobile FCP ≈1.3s and fewer abandoned requests after validation + progress cues.\",\n      details: \"Tech: React, Firebase (Auth/Firestore/Hosting), Tailwind, EmailJS. Focus was secure form flows and a mobile-first UI for non-technical users. I used least-privilege Firestore rules, serverless email hand-off, and simplified step forms. Result: mobile FCP ≈1.3s and fewer abandoned requests after validation + progress cues.\",\n    tags: [\"react\", \"firebase\", \"tailwind\", \"api\", \"nodejs\", \"emailjs\"],\n    links: [\n      {\n        tooltip: \"See code\",\n        link: \"https://github.com/Mike-Innella/howard-motor-webapp\",\n        type: \"code\",\n      },\n      {\n        tooltip: \"See app\",\n        link: \"https://www.howardmotorco.net/\",\n        type: \"live\",\n      },\n    ],\n  },\n\n  {\n    slug: \"spoiler-shield\",\n    title: \"Spoiler Shield\",\n    subtitle: \"Mobile/Web Developer\",\n    image: \"/images/SpoilerShield.png\",\n    summary:\n      \"Details coming soon — project link: https://www.spoilershield.xyz/\",\n      details: \"Tech: Next.js, TypeScript, API integrations. The core problem was filtering spoilers consistently without over-blocking. I implemented a normalized rule system with a preview/test mode and cached lookups. Result: sub-200ms rule application on typical feeds and a low false-positive rate targeted via unit tests. (Public beta still evolving.)\",\n      details: \"Tech: Next.js, TypeScript, API integrations. The core problem was filtering spoilers consistently without over-blocking. I implemented a normalized rule system with a preview/test mode and cached lookups. Result: sub-200ms rule application on typical feeds and a low false-positive rate targeted via unit tests. (Public beta still evolving.)\",\n    tags: [\"nextjs\", \"typescript\", \"api\"],\n    links: [\n      {\n        tooltip: \"See code\",\n        link: \"https://github.com/0xagf0x/spoiler-shield-web\",\n        type: \"code\",\n      },\n      {\n        tooltip: \"See app\",\n        link: \"https://www.spoilershield.xyz/\",\n        type: \"live\",\n      },\n    ],\n  },\n\n  {\n    slug: \"skinstric-ai\",\n    title: \"Skinstric.AI\",\n    subtitle: \"Frontend Engineer\",\n    image: \"/images/Skinstric.png\",\n    summary:\n      \"Built a real-time skin analysis platform using OpenAI Vision API and Next.js with 98% detection accuracy...\",\n      details: \"Tech: Next.js, React, OpenAI Vision API, CSS, Three.js (UI flourishes), Vercel. Main issues were inference latency and robust error states for user images. I added progressive UI states, client-side checks, and smaller payloads. Result: prototype measured ~98% detection on an internal set with typical round-trip ≈1–2s on desktop.\",\n      details: \"Tech: Next.js, React, OpenAI Vision API, CSS, Three.js (UI flourishes), Vercel. Main issues were inference latency and robust error states for user images. I added progressive UI states, client-side checks, and smaller payloads. Result: prototype measured ~98% detection on an internal set with typical round-trip ≈1–2s on desktop.\",\n    tags: [\"react\", \"javascript\", \"api\", \"css\", \"threejs\"],\n    links: [\n      {\n        tooltip: \"See code\",\n        link: \"https://github.com/Mike-Innella/Skinstric.AI-Mike_Innella_Internship\",\n        type: \"code\",\n      },\n      {\n        tooltip: \"See app\",\n        link: \"https://skinstric-ai-mike-innella-internship.vercel.app/\",\n        type: \"live\",\n      },\n    ],\n  },\n\n  {\n    slug: \"summarist\",\n    title: \"Summarist\",\n    subtitle: \"Independent Project\",\n    image: \"/images/Summarist.png\",\n    summary:\n      \"Rebuilt a book-summary app clone using Next.js, TypeScript, Tailwind CSS, and Supabase. Features authentication, dynamic pages, and responsive UI.\",\n      details: \"Tech: Next.js, TypeScript, Supabase, Tailwind. I built auth, dynamic routes, and a responsive layout while keeping search snappy. Debounced queries and route-level code-splitting improved perceived speed. Result: LCP under ~2s on desktop and sub-150ms search feedback for common queries.\",\n      details: \"Tech: Next.js, TypeScript, Supabase, Tailwind. I built auth, dynamic routes, and a responsive layout while keeping search snappy. Debounced queries and route-level code-splitting improved perceived speed. Result: LCP under ~2s on desktop and sub-150ms search feedback for common queries.\",\n    tags: [\"nextjs\", \"typescript\", \"supabase\", \"tailwind\", \"css\"],\n    links: [\n      {\n        tooltip: \"See code\",\n        link: \"https://github.com/Mike-Innella/summarist-home-page\",\n        type: \"code\",\n      },\n      {\n        tooltip: \"See app\",\n        link: \"https://summarist-home-page-pied.vercel.app/\",\n        type: \"live\",\n      },\n    ],\n  },\n\n  {\n    slug: \"shaman-asher\",\n    title: \"The Shaman Asher\",\n    subtitle: \"Freelance\",\n    image: \"/images/ShamanAsher.png\",\n    summary:\n      \"Hired as a freelance UI/UX developer to modernize a mystical services website. Introduced animated loaders...\",\n      details: \"Tech: TypeScript, Tailwind, EmailJS. Hired to modernize UX: added loaders, accessible forms, and consistent motion. The challenge was creating a polished feel without heavy bundles. Result: reduced layout shift (stable CLS), lean CSS, and clearer conversion paths via simplified CTAs.\",\n      details: \"Tech: TypeScript, Tailwind, EmailJS. Hired to modernize UX: added loaders, accessible forms, and consistent motion. The challenge was creating a polished feel without heavy bundles. Result: reduced layout shift (stable CLS), lean CSS, and clearer conversion paths via simplified CTAs.\",\n    tags: [\"typescript\", \"tailwind\", \"emailjs\", \"html\", \"nodejs\"],\n    links: [\n      {\n        tooltip: \"See code\",\n        link: \"https://github.com/theshamanasher/theshamanasher\",\n        type: \"code\",\n      },\n      {\n        tooltip: \"See app\",\n        link: \"https://www.shamanasher.com/\",\n        type: \"live\",\n      },\n    ],\n  },\n\n  {\n    slug: \"nft-marketplace\",\n    title: \"NFT Marketplace\",\n    subtitle: \"Frontend Developer (Internship)\",\n    image: \"/images/NFTMarket.png\",\n    summary:\n      \"Virtual internship capstone where I independently rebuilt an NFT Marketplace as a responsive React SPA...\",\n      details: \"Tech: React, JavaScript, CSS. Internship capstone focused on grid performance, pagination, and wallet-like interactions. I virtualized long lists and split code by route to keep the app responsive. Result: 60fps scroll on commodity laptops and Lighthouse scores in the 90s for performance/accessibility.\",\n      details: \"Tech: React, JavaScript, CSS. Internship capstone focused on grid performance, pagination, and wallet-like interactions. I virtualized long lists and split code by route to keep the app responsive. Result: 60fps scroll on commodity laptops and Lighthouse scores in the 90s for performance/accessibility.\",\n    tags: [\"react\", \"javascript\", \"css\", \"html\", \"routing\"],\n    links: [\n      {\n        tooltip: \"See code\",\n        link: \"https://github.com/Mike-Innella/nft-marketplace--MIke_Innella-Internship\",\n        type: \"code\",\n      },\n      {\n        tooltip: \"See app\",\n        link: \"https://nft-marketplace-m-ike-innell-git-40ec1a-mikes-projects-4896b1c6.vercel.app/\",\n        type: \"live\",\n      },\n    ],\n  },\n\n  {\n    slug: \"omdb-store\",\n    title: \"OMDB Movie Store\",\n    subtitle: \"Independent Project\",\n    image: \"/images/MovieStore.png\",\n    summary:\n      \"Solo portfolio project built to master web APIs and dynamic UI development. Created a responsive React app...\",\n      details: \"Tech: React, OMDB API, CSS. The tricky parts were API edge cases, error states, and making search feel instant. I added debounce + cancelation and defensive UI around empty/invalid responses. Result: perceived search latency ≈150–200ms after debounce with clear skeleton and empty states.\",\n      details: \"Tech: React, OMDB API, CSS. The tricky parts were API edge cases, error states, and making search feel instant. I added debounce + cancelation and defensive UI around empty/invalid responses. Result: perceived search latency ≈150–200ms after debounce with clear skeleton and empty states.\",\n    tags: [\"react\", \"javascript\", \"api\", \"css\"],\n    links: [\n      {\n        tooltip: \"See code\",\n        link: \"https://github.com/Mike-Innella/OMDBProject\",\n        type: \"code\",\n      },\n      {\n        tooltip: \"See app\",\n        link: \"https://mike-innella.github.io/OMDBProject/\",\n        type: \"live\",\n      },\n    ],\n  },\n\n  {\n    slug: \"fweather\",\n    title: \"Fweather\",\n    subtitle: \"Independent Project\",\n    image: \"/images/Fweather.png\",\n    summary:\n      \"Personal project: a playful React weather dashboard integrating multiple APIs for real-time weather...\",\n      details: \"Tech: React, multiple weather APIs, CSS/HTML. Combined geolocation, current conditions, and forecasts into a cohesive UI. Caching and minimal re-renders keep it light. Result: typical initial load ≈1.2s on desktop with smooth updates on location change.\",\n      details: \"Tech: React, multiple weather APIs, CSS/HTML. Combined geolocation, current conditions, and forecasts into a cohesive UI. Caching and minimal re-renders keep it light. Result: typical initial load ≈1.2s on desktop with smooth updates on location change.\",\n    tags: [\"react\", \"javascript\", \"api\", \"css\", \"html\"],\n    links: [\n      {\n        tooltip: \"See code\",\n        link: \"https://github.com/Mike-Innella/Fweather\",\n        type: \"code\",\n      },\n      {\n        tooltip: \"See app\",\n        link: \"https://mike-innella.github.io/Fweather/\",\n        type: \"live\",\n      },\n    ],\n  },\n];\n"],"names":[],"mappings":";;;;AAmBO,MAAM,WAAsB;IACjC;QACE,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO;QACP,SACE;QACA,SAAS;QACT,SAAS;QACX,MAAM;YAAC;YAAS;YAAc;YAAO;YAAO;YAAQ;YAAW;SAAW;QAC1E,OAAO;YACL;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;YACA;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;SACD;IACH;IAEA;QACE,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO;QACP,SACE;QACA,SAAS;QACT,SAAS;QACX,MAAM;YAAC;YAAS;YAAY;YAAY;YAAO;YAAU;SAAU;QACnE,OAAO;YACL;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;YACA;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;SACD;IACH;IAEA;QACE,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO;QACP,SACE;QACA,SAAS;QACT,SAAS;QACX,MAAM;YAAC;YAAU;YAAc;SAAM;QACrC,OAAO;YACL;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;YACA;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;SACD;IACH;IAEA;QACE,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO;QACP,SACE;QACA,SAAS;QACT,SAAS;QACX,MAAM;YAAC;YAAS;YAAc;YAAO;YAAO;SAAU;QACtD,OAAO;YACL;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;YACA;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;SACD;IACH;IAEA;QACE,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO;QACP,SACE;QACA,SAAS;QACT,SAAS;QACX,MAAM;YAAC;YAAU;YAAc;YAAY;YAAY;SAAM;QAC7D,OAAO;YACL;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;YACA;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;SACD;IACH;IAEA;QACE,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO;QACP,SACE;QACA,SAAS;QACT,SAAS;QACX,MAAM;YAAC;YAAc;YAAY;YAAW;YAAQ;SAAS;QAC7D,OAAO;YACL;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;YACA;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;SACD;IACH;IAEA;QACE,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO;QACP,SACE;QACA,SAAS;QACT,SAAS;QACX,MAAM;YAAC;YAAS;YAAc;YAAO;YAAQ;SAAU;QACvD,OAAO;YACL;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;YACA;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;SACD;IACH;IAEA;QACE,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO;QACP,SACE;QACA,SAAS;QACT,SAAS;QACX,MAAM;YAAC;YAAS;YAAc;YAAO;SAAM;QAC3C,OAAO;YACL;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;YACA;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;SACD;IACH;IAEA;QACE,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO;QACP,SACE;QACA,SAAS;QACT,SAAS;QACX,MAAM;YAAC;YAAS;YAAc;YAAO;YAAO;SAAO;QACnD,OAAO;YACL;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;YACA;gBACE,SAAS;gBACT,MAAM;gBACN,MAAM;YACR;SACD;IACH;CACD","debugId":null}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":["file:///home/mike__2099/Documents/GitHub/e-Portfolio-2025/portfolio2/src/components/ProjectCard.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/Documents/GitHub/e-Portfolio-2025/portfolio2/src/components/ProjectCard.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/Documents/GitHub/e-Portfolio-2025/portfolio2/src/components/ProjectCard.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,uYAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA+U,GAC5W,6GACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":["file:///home/mike__2099/Documents/GitHub/e-Portfolio-2025/portfolio2/src/components/ProjectCard.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/Documents/GitHub/e-Portfolio-2025/portfolio2/src/components/ProjectCard.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/Documents/GitHub/e-Portfolio-2025/portfolio2/src/components/ProjectCard.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,uYAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA2T,GACxV,yFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 329, "column": 0}, "map": {"version":3,"sources":["file:///home/mike__2099/Documents/GitHub/e-Portfolio-2025/portfolio2/src/app/projects/page.tsx"],"sourcesContent":["import s from \"./ProjectsPage.module.css\";\nimport gridStyles from \"./projects.module.css\";\nimport { projects } from \"@/content/projects\";\nimport ProjectCard from \"@/components/ProjectCard\";\n\nexport const metadata = {\n  title: \"Projects — Mike Innella\",\n  description: \"Selected work and experiments\",\n};\n\nexport default function ProjectsPage() {\n  return (\n    <section className={`${s.section} ${gridStyles.grid}`}>\n      {projects.map((p) => (\n        <ProjectCard\n          key={p.slug}\n          title={p.title}\n          subtitle={p.subtitle}\n          summary={p.summary}\n          tags={p.tags}\n          image={p.image}\n          href={`/projects/${p.slug}`}\n        />\n      ))}\n    </section>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;;;;;;AAEO,MAAM,WAAW;IACtB,OAAO;IACP,aAAa;AACf;AAEe,SAAS;IACtB,qBACE,6WAAC;QAAQ,WAAW,GAAG,4NAAC,CAAC,OAAO,CAAC,CAAC,EAAE,wNAAU,CAAC,IAAI,EAAE;kBAClD,qMAAQ,CAAC,GAAG,CAAC,CAAC,kBACb,6WAAC,2MAAW;gBAEV,OAAO,EAAE,KAAK;gBACd,UAAU,EAAE,QAAQ;gBACpB,SAAS,EAAE,OAAO;gBAClB,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,KAAK;gBACd,MAAM,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE;eANtB,EAAE,IAAI;;;;;;;;;;AAWrB","debugId":null}}]
}